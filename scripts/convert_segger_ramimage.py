import os
from datetime import datetime

import IntelHex

files = os.listdir('../segger/RamImage')
files = [f for f in files if f.endswith('hex')]

ramcodes = []

#Read all hex files in directory
for f in files:
    ihex = IntelHex.IntelHex(os.path.join('../segger/RamImage', f))
    data = ihex.tobinarray()
    size1 = ihex.maxaddr() - ihex.minaddr() + 1
    size2 = len(data)

    if size1 != size2:
        raise ValueError("Possible non-continous ramcode, unable to proceed.")
    
    ramcodes.append({"name":f[:-4], "size":size1, "start_address":ihex.minaddr(), "data":data})

#Write output file
f = open("../ramcode.py", "w")

now = datetime.now()

f.write("# THIS FILE IS AUTOMATICALLY GENERATED FROM " + __file__ + "\n")
f.write("# Autogenerated on " + now.strftime("%d/%m/%Y %H:%M:%S") + "\n")
f.write("# **************************************************************\n")
f.write("# ** This file is NOT ASSOCIATED WITH OR SUPPORTED BY SEGGER. **\n")
f.write("# **************************************************************\n")
f.write("# \n")
f.write("# This file contains code from the Segger 'ToshLoad' program, which\n")
f.write("# contains the following license information. Be aware that PyToshLoad\n")
f.write("# is NOT a Segger product and entirely a 3rd party implementation.\n")
f.write("# The RAMCode loaded as part of the process is used under the following\n")
f.write("# license conditions:\n#\n#\n")

with open("../segger/License.txt", "r") as fp:
    Lines = fp.readlines()
    for line in Lines:

        f.write("# ## " + line)
f.write("\n\n")



f.write("ramcode_names = %s\n\n"%str([r["name"] for r in ramcodes]))

for r in ramcodes:
    f.write("%s = %s\n"%(r["name"], str(r)))


f.close()